name: Deploy React Portfolio to AWS

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Setup Python for SAM
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Setup AWS SAM CLI
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Verify SAM installation
        run: sam --version

      - name: Install dependencies
        run: npm ci

      - name: Build React app
        run: npm run build
        env:
          CI: false
          REACT_APP_RECAPTCHA_SITE_KEY: ${{ secrets.REACT_APP_RECAPTCHA_SITE_KEY }}
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Verify AWS credentials
        run: aws sts get-caller-identity

      - name: Build and Deploy Lambda Function
        run: |
          cd lambda
          echo "Building SAM application..."
          sam build --debug
          echo "Deploying SAM application..."
          sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name contact-form-stack --capabilities CAPABILITY_IAM --parameter-overrides RecaptchaSecretKey="${{ secrets.RECAPTCHA_SECRET_KEY }}" --debug
          echo "Getting API Gateway URL..."
          aws cloudformation describe-stacks --stack-name contact-form-stack --query 'Stacks[0].Outputs[?OutputKey==`ApiUrl`].OutputValue' --output text
          cd ..

      - name: Deploy to S3
        run: |
          echo "Syncing files to S3..."
          aws s3 sync build/ s3://${{ secrets.S3_BUCKET_NAME }} --delete --exact-timestamps
          echo "Setting cache headers for index.html..."
          aws s3 cp s3://${{ secrets.S3_BUCKET_NAME }}/index.html s3://${{ secrets.S3_BUCKET_NAME }}/index.html \
            --metadata-directive REPLACE \
            --cache-control max-age=0,no-cache,no-store,must-revalidate \
            --content-type text/html

      - name: Invalidate CloudFront cache
        run: |
          echo "Invalidating CloudFront cache..."
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
